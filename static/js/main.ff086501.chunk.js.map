{"version":3,"sources":["components/DrawField.js","global/constants.js","global/ToolFunctions.js","components/Toolbar.js","global/initialToolbarStatus.js","App.js","index.js"],"names":["DrawField","ToolbarStatus","canvasRef","setToolbarStatus","useRef","ctxRef","canvasRefVisual","ctxRefVisual","useState","IsDrawing","setIsDrawing","XAxis","YAxis","MouseLoc","setMouseLoc","CoordinatesActive","setCoordinatesActive","TextToolValue","setTextToolValue","useEffect","canvas","current","width","height","style","ctx","getContext","lineCap","strokeStyle","color","lineWidth","tool","set","border","ref","id","className","cursor","top","left","onMouseDown","start","Name","textMenu","textMenuY","textMenuX","onMouseMove","event","clientX","offsetLeft","clientY","offsetTop","cursorFunction","action","onMouseUp","stop","onMouseLeave","display","type","onChange","target","value","fontSize","onKeyDown","key","place","ActiveBtn","borderColor","borderWidth","Pen","X","Y","Object","moveTo","beginPath","lineTo","stroke","closePath","dragLine","name","initialLocX","initialLocY","clearRect","Arc","arcX","arcY","arcSize","test","console","log","xAxisRadius","Math","abs","yAxisRadius","arc","squareFill","fillStyle","squareWidth","squareHeight","fillRect","square","click1X","click1Y","text","textValue","font","fillText","Toolbar","StandardTool","ClassName","ToolFunctions","global","onClick","prevState","canvasId","document","getElementById","link","createElement","download","href","toDataURL","click","background","hex","min","max","DefaultToolbarStatus","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.ff086501.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\n\r\nexport const DrawField = ({ ToolbarStatus, setToolbarStatus }) => {\r\n  const canvasRef = useRef(null);\r\n  const ctxRef = useRef(null);\r\n\r\n  const canvasRefVisual = useRef(null);\r\n  const ctxRefVisual = useRef(null);\r\n\r\n  const [IsDrawing, setIsDrawing] = useState(false);\r\n  const [MouseLoc, setMouseLoc] = useState({ XAxis: 0, YAxis: 0 });\r\n  const [CoordinatesActive, setCoordinatesActive] = useState(false);\r\n  const [TextToolValue, setTextToolValue] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    canvas.width = 800;\r\n    canvas.height = 800;\r\n    canvas.style.width = `${800}px`;\r\n    canvas.style.height = `${800}px`;\r\n    const ctx = canvas.getContext(\"2d\");\r\n    ctx.lineCap = \"round\";\r\n    ctx.strokeStyle = ToolbarStatus.color;\r\n    ctx.lineWidth = ToolbarStatus.lineWidth;\r\n    ctxRef.current = ctx;\r\n  }, []);\r\n  /**draw field canvas */\r\n  useEffect(() => {\r\n    const canvas = canvasRefVisual.current;\r\n    canvas.width = 800;\r\n    canvas.height = 800;\r\n    canvas.style.width = `${800}px`;\r\n    canvas.style.height = `${800}px`;\r\n    const ctx = canvas.getContext(\"2d\");\r\n    ctx.lineCap = \"round\";\r\n    ctx.strokeStyle = ToolbarStatus.color;\r\n    ctx.lineWidth = ToolbarStatus.lineWidth;\r\n    ctxRefVisual.current = ctx;\r\n  }, []);\r\n  /**mouse tool visual */\r\n\r\n  useEffect(() => {\r\n    ToolbarStatus.tool.set(\r\n      ctxRef.current,\r\n      ToolbarStatus.lineWidth,\r\n      ToolbarStatus.color\r\n    );\r\n  }, [ToolbarStatus]);\r\n\r\n  return (\r\n    <>\r\n      <canvas style={{ border: \"1px solid #000\" }} ref={canvasRef} id=\"image\" />\r\n      <canvas\r\n        className=\"canvasRefVisual\"\r\n        style={{\r\n          border: \"1px solid #000\",\r\n          cursor: \"crosshair\",\r\n          top: 8 /**canvasRef.current.offsetTop */,\r\n          left: 108 /**canvasRef.current.offsetLeft */,\r\n        }}\r\n        ref={canvasRefVisual}\r\n        onMouseDown={() => {\r\n          setIsDrawing(true);\r\n          ToolbarStatus.tool.start(MouseLoc.XAxis, MouseLoc.YAxis);\r\n          if (ToolbarStatus.tool.Name === \"text\") {\r\n            ToolbarStatus.tool.textMenu = true;\r\n            ToolbarStatus.tool.textMenuY = MouseLoc.YAxis;\r\n            ToolbarStatus.tool.textMenuX = MouseLoc.XAxis;\r\n            //need to more this if statement to tool function!!!\r\n          }\r\n        }}\r\n        onMouseMove={(event) => {\r\n          setCoordinatesActive(true);\r\n          setMouseLoc({\r\n            XAxis: event.clientX - canvasRef.current.offsetLeft,\r\n            YAxis: event.clientY - canvasRef.current.offsetTop,\r\n          });\r\n          if (!IsDrawing) return;\r\n          ToolbarStatus.tool.cursorFunction(\r\n            ctxRefVisual.current,\r\n            MouseLoc.XAxis,\r\n            MouseLoc.YAxis\r\n          );\r\n          ToolbarStatus.tool.action(MouseLoc.XAxis, MouseLoc.YAxis);\r\n        }}\r\n        onMouseUp={() => {\r\n          ToolbarStatus.tool.stop(MouseLoc.XAxis, MouseLoc.YAxis);\r\n          setIsDrawing(false);\r\n        }}\r\n        onMouseLeave={() => {\r\n          setCoordinatesActive(false);\r\n        }}\r\n      />\r\n\r\n      {/** VVVVVV writing tool support window VVVVV  */}\r\n      <div\r\n        className=\"textTool\"\r\n        style={{\r\n          display: ToolbarStatus.tool.textMenu === true ? \"block\" : \"none\",\r\n          top: ToolbarStatus.tool.textMenuY,\r\n          left: ToolbarStatus.tool.textMenuX,\r\n        }}\r\n      >\r\n        <input\r\n          type=\"textarea\"\r\n          onChange={(event) => {\r\n            setTextToolValue(event.target.value);\r\n          }}\r\n          value={TextToolValue}\r\n          className=\"textTool__input\"\r\n          style={{\r\n            display: ToolbarStatus.tool.textMenu === true ? \"block\" : \"none\",\r\n            top: ToolbarStatus.tool.textMenuY,\r\n            left: ToolbarStatus.tool.textMenuX,\r\n            color: ToolbarStatus.color,\r\n            fontSize: `${ToolbarStatus.lineWidth}px`,\r\n          }}\r\n          onKeyDown={(event) => {\r\n            if (event.key != \"Enter\") return;\r\n            ToolbarStatus.tool.lineWidth = ToolbarStatus.tool.lineWidth;\r\n            ToolbarStatus.tool.place(TextToolValue, ToolbarStatus.color);\r\n          }}\r\n        />\r\n      </div>\r\n      {/**^^^^^^^^^^^^writing tool support window ^^^^^^^^  */}\r\n      <p\r\n        style={{\r\n          display: CoordinatesActive ? \"block\" : \"none\",\r\n          top: MouseLoc.YAxis - 10,\r\n          left: MouseLoc.XAxis + 130,\r\n        }}\r\n        className=\"cursorCandidates\"\r\n      >\r\n        {`X:${MouseLoc.XAxis}`}\r\n        <br />\r\n        {`Y:${MouseLoc.YAxis}`}\r\n      </p>\r\n\r\n      {/* <button\r\n        onClick={() => {\r\n          console.log(ToolbarStatus.tool);\r\n        }}\r\n      >\r\n        testa\r\n      </button> */}\r\n    </>\r\n  );\r\n};\r\n","export const ActiveBtn = { borderColor: \"#1d7e8f\", borderWidth: \"2px\" };\r\n","export const Pen = {\r\n  Name: \"pen\",\r\n  ctxRef: \"\",\r\n  lineWidth: \"\",\r\n  color: \"\",\r\n  start: (X, Y) => {\r\n    Object.ctxRef.moveTo(X, Y);\r\n    Object.ctxRef.lineWidth = Object.lineWidth;\r\n    Object.ctxRef.strokeStyle = Object.color;\r\n    Object.ctxRef.lineCap = \"round\";\r\n    Object.ctxRef.beginPath();\r\n  },\r\n  action: (X, Y) => {\r\n    Object.ctxRef.lineTo(X, Y);\r\n    Object.ctxRef.stroke();\r\n  },\r\n  stop: (X, Y) => {\r\n    Object.ctxRef.closePath();\r\n  },\r\n  cursorFunction: (ctxRef, X, Y) => {},\r\n\r\n  set: (ctxRef, lineWidth, color) => {\r\n    Object.ctxRef = ctxRef;\r\n    Object.lineWidth = lineWidth;\r\n    Object.color = color;\r\n  },\r\n};\r\n/*******************************************************************/\r\nexport const dragLine = {\r\n  name: \"dragLine\",\r\n  ctxRef: \"\",\r\n  lineWidth: \"\",\r\n  color: \"\",\r\n  initialLocX: null,\r\n  initialLocY: null,\r\n  start: (X, Y) => {\r\n    Object.ctxRef.lineWidth = Object.lineWidth;\r\n    Object.ctxRef.strokeStyle = Object.color;\r\n    Object.ctxRef.lineCap = \"round\";\r\n    Object.initialLocX = X;\r\n    Object.initialLocY = Y;\r\n    Object.ctxRef.beginPath();\r\n    Object.ctxRef.moveTo(X, Y);\r\n  },\r\n  action: (X, Y) => {},\r\n  stop: (X, Y) => {\r\n    Object.ctxRef.lineTo(X, Y);\r\n    Object.ctxRef.stroke();\r\n    Object.ctxRef.closePath();\r\n  },\r\n  cursorFunction: (ctxRef, X, Y) => {\r\n    ctxRef.clearRect(0, 0, 800, 800);\r\n    ctxRef.lineWidth = Object.lineWidth;\r\n    ctxRef.strokeStyle = Object.color;\r\n    ctxRef.lineCap = \"round\";\r\n    ctxRef.beginPath();\r\n    ctxRef.moveTo(Object.initialLocX, Object.initialLocY);\r\n    ctxRef.lineTo(X, Y);\r\n    ctxRef.stroke();\r\n    ctxRef.closePath();\r\n  },\r\n  set: (ctxRef, lineWidth, color) => {\r\n    Object.ctxRef = ctxRef;\r\n    Object.lineWidth = lineWidth;\r\n    Object.color = color;\r\n  },\r\n};\r\n/*******************************************************************/\r\nexport const Arc = {\r\n  name: \"arc\",\r\n  ctxRef: \"\",\r\n  lineWidth: \"\",\r\n  color: \"\",\r\n  arcX: 0,\r\n  arcY: 0,\r\n  arcSize: 0,\r\n  test: () => {\r\n    console.log(\"works\");\r\n  },\r\n  start: (X, Y) => {\r\n    Object.ctxRef.lineWidth = Object.lineWidth;\r\n    Object.ctxRef.strokeStyle = Object.color;\r\n    Object.ctxRef.beginPath();\r\n    Object.arcX = X;\r\n    Object.arcY = Y;\r\n  },\r\n  action: (X, Y) => {\r\n    let xAxisRadius = Math.abs(Object.arcX - X);\r\n    let yAxisRadius = Math.abs(Object.arcY - Y);\r\n    Object.arcSize = xAxisRadius > yAxisRadius ? xAxisRadius : yAxisRadius;\r\n  },\r\n  stop: (X, Y) => {\r\n    Object.ctxRef.arc(Object.arcX, Object.arcY, Object.arcSize, 0, 7);\r\n    Object.ctxRef.stroke();\r\n    Object.ctxRef.closePath();\r\n  },\r\n  cursorFunction: (ctxRef, X, Y) => {\r\n    ctxRef.clearRect(0, 0, 800, 800);\r\n    ctxRef.lineWidth = Object.lineWidth;\r\n    ctxRef.strokeStyle = Object.color;\r\n    ctxRef.beginPath();\r\n    ctxRef.arc(Object.arcX, Object.arcY, Object.arcSize, 0, 7);\r\n    ctxRef.stroke();\r\n    ctxRef.closePath();\r\n    // Object.test();\r\n  },\r\n  set: (ctxRef, lineWidth, color) => {\r\n    Object.ctxRef = ctxRef;\r\n    Object.lineWidth = lineWidth;\r\n    Object.color = color;\r\n  },\r\n};\r\n//arc size must by calculated by bout axis   add arcRadiusDisplay length\r\n/*******************************************************************/\r\nexport const squareFill = {\r\n  name: \"squareFill\",\r\n  ctxRef: \"\",\r\n  lineWidth: \"\",\r\n  color: \"\",\r\n  arcX: 0,\r\n  arcY: 0,\r\n  arcSize: 0,\r\n  start: (X, Y) => {\r\n    Object.ctxRef.lineWidth = Object.lineWidth;\r\n    Object.ctxRef.fillStyle = Object.color;\r\n    Object.ctxRef.beginPath();\r\n    Object.arcX = X;\r\n    Object.arcY = Y;\r\n  },\r\n  action: (X, Y) => {},\r\n  stop: (X, Y) => {\r\n    let squareWidth = Math.abs(Object.arcX - X);\r\n    let squareHeight = Math.abs(Object.arcY - Y);\r\n    Object.ctxRef.fillRect(\r\n      Object.arcX < X ? Object.arcX : Object.arcX - squareWidth,\r\n      Object.arcY < Y ? Object.arcY : Object.arcY - squareHeight,\r\n      squareWidth,\r\n      squareHeight\r\n    );\r\n    Object.ctxRef.stroke();\r\n    Object.ctxRef.closePath();\r\n  },\r\n  cursorFunction: (ctxRef, X, Y) => {\r\n    let squareWidth = Math.abs(Object.arcX - X);\r\n    let squareHeight = Math.abs(Object.arcY - Y);\r\n    ctxRef.clearRect(0, 0, 800, 800);\r\n    ctxRef.lineWidth = Object.lineWidth;\r\n    ctxRef.fillStyle = Object.color;\r\n    ctxRef.beginPath();\r\n    ctxRef.fillRect(\r\n      Object.arcX < X ? Object.arcX : Object.arcX - squareWidth,\r\n      Object.arcY < Y ? Object.arcY : Object.arcY - squareHeight,\r\n      squareWidth,\r\n      squareHeight\r\n    );\r\n    ctxRef.stroke();\r\n    ctxRef.closePath();\r\n  },\r\n\r\n  set: (ctxRef, lineWidth, color) => {\r\n    Object.ctxRef = ctxRef;\r\n    Object.lineWidth = lineWidth;\r\n    Object.color = color;\r\n  },\r\n};\r\n/*******************************************************************/\r\nexport const square = {\r\n  name: \"square\",\r\n  ctxRef: \"\",\r\n  lineWidth: \"\",\r\n  color: \"\",\r\n  click1X: null,\r\n  click1Y: null,\r\n  start: (X, Y) => {\r\n    Object.ctxRef.lineWidth = Object.lineWidth;\r\n    Object.ctxRef.strokeStyle = Object.color;\r\n    Object.ctxRef.lineCap = \"square\";\r\n    Object.ctxRef.beginPath();\r\n    Object.ctxRef.moveTo(X, Y);\r\n    Object.click1X = X;\r\n    Object.click1Y = Y;\r\n  },\r\n  action: (X, Y) => {},\r\n  stop: (X, Y) => {\r\n    Object.ctxRef.lineTo(X, Object.click1Y);\r\n    Object.ctxRef.lineTo(X, Y);\r\n    Object.ctxRef.lineTo(Object.click1X, Y);\r\n    Object.ctxRef.lineTo(Object.click1X, Object.click1Y);\r\n    Object.ctxRef.stroke();\r\n    Object.ctxRef.closePath();\r\n  },\r\n  cursorFunction: (ctxRef, X, Y) => {\r\n    ctxRef.clearRect(0, 0, 800, 800);\r\n    ctxRef.lineWidth = Object.lineWidth;\r\n    ctxRef.strokeStyle = Object.color;\r\n    ctxRef.lineCap = \"square\";\r\n    ctxRef.beginPath();\r\n    ctxRef.moveTo(Object.click1X, Object.click1Y);\r\n    ctxRef.lineTo(X, Object.click1Y);\r\n    ctxRef.lineTo(X, Y);\r\n    ctxRef.lineTo(Object.click1X, Y);\r\n    ctxRef.lineTo(Object.click1X, Object.click1Y);\r\n    ctxRef.stroke();\r\n    ctxRef.closePath();\r\n  },\r\n  set: (ctxRef, lineWidth, color) => {\r\n    Object.ctxRef = ctxRef;\r\n    Object.lineWidth = lineWidth;\r\n    Object.color = color;\r\n  },\r\n};\r\n\r\n/********************************************************* */\r\n\r\nexport const text = {\r\n  Name: \"text\",\r\n  ctxRef: \"\",\r\n  lineWidth: \"\",\r\n  color: \"\",\r\n  textMenu: false,\r\n  textMenuX: null,\r\n  textMenuY: null,\r\n  textValue: \"\",\r\n  start: (X, Y) => {\r\n    Object.textMenuX = X;\r\n    Object.textMenuY = Y;\r\n    Object.textMenu = true;\r\n  },\r\n  action: (X, Y) => {},\r\n  stop: (X, Y) => {},\r\n  cursorFunction: (ctxRef, X, Y) => {},\r\n  place: (TextToolValue, color) => {\r\n    Object.ctxRef.font = `${Object.lineWidth}px Arial`;\r\n    Object.ctxRef.fillStyle = color;\r\n    console.log(color);\r\n    Object.ctxRef.fillText(TextToolValue, Object.textMenuX, Object.textMenuY);\r\n  },\r\n  set: (ctxRef, lineWidth, color, textMenu) => {\r\n    Object.ctxRef = ctxRef;\r\n    Object.lineWidth = lineWidth;\r\n    Object.color = color;\r\n    Object.textMenu = textMenu;\r\n  },\r\n};\r\n//maxWidth , placement adjust,  font picker  ,eases of use,drag\r\n\r\n//more reformations needed!!!\r\n","import React from \"react\";\r\nimport { GithubPicker } from \"react-color\";\r\nimport { BsPen, BsSquare } from \"react-icons/bs\";\r\nimport { VscTextSize } from \"react-icons/vsc\";\r\nimport { FaSquareFull, FaRegSave } from \"react-icons/fa\";\r\nimport * as global from \"../global/constants\";\r\nimport {\r\n  Pen,\r\n  dragLine,\r\n  Arc,\r\n  squareFill,\r\n  square,\r\n  text,\r\n} from \"../global/ToolFunctions\";\r\n\r\nexport const Toolbar = ({ setToolbarStatus, ToolbarStatus }) => {\r\n  const StandardTool = ({ name, ClassName, ToolFunctions }) => {\r\n    return (\r\n      <div\r\n        className={ClassName}\r\n        style={\r\n          ToolbarStatus.tool.name === ClassName\r\n            ? global.ActiveBtn\r\n            : { borderColor: \"#000\" }\r\n        }\r\n        onClick={() => {\r\n          setToolbarStatus((prevState) => ({\r\n            ...prevState,\r\n            tool: ToolFunctions,\r\n          }));\r\n        }}\r\n      >\r\n        <p> {name}</p>\r\n      </div>\r\n    );\r\n  };\r\n  function download() {\r\n    const canvasId = document.getElementById(\"image\");\r\n    // const img = canvasId.toDataURL(\"image/png\");\r\n    // document.write('<img src=\"' + img + '\"/>');\r\n    const link = document.createElement(\"a\");\r\n    link.download = \"filename.png\";\r\n    link.href = canvasId.toDataURL();\r\n    link.click();\r\n  }\r\n\r\n  return (\r\n    <div className=\"Toolbar\">\r\n      <div\r\n        onClick={() => {\r\n          download(\"yourDrawing\", \"asdasd\");\r\n        }}\r\n      >\r\n        <FaRegSave />\r\n      </div>\r\n      <div className=\"colorPicker\" style={{ background: ToolbarStatus.color }}>\r\n        <div className=\"colorPickerHover\">\r\n          <GithubPicker\r\n            onChange={(color) => {\r\n              setToolbarStatus((prevState) => ({\r\n                ...prevState,\r\n                color: color.hex,\r\n              }));\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"lineWidth\">\r\n        <input\r\n          type=\"range\"\r\n          className=\"rangerBar\"\r\n          min=\"1\"\r\n          max=\"50\"\r\n          value={ToolbarStatus.lineWidth}\r\n          onChange={(event) => {\r\n            setToolbarStatus((prevState) => ({\r\n              ...prevState,\r\n              lineWidth: event.target.value,\r\n            }));\r\n          }}\r\n        />\r\n        <p>{ToolbarStatus.lineWidth}</p>\r\n      </div>\r\n\r\n      <div\r\n        className=\"tool\"\r\n        style={\r\n          ToolbarStatus.tool.Name === \"pen\"\r\n            ? global.ActiveBtn\r\n            : { borderColor: \"#000\" }\r\n        }\r\n      >\r\n        <BsPen\r\n          onClick={() => {\r\n            setToolbarStatus((prevState) => ({\r\n              ...prevState,\r\n              tool: Pen,\r\n            }));\r\n          }}\r\n        />\r\n      </div>\r\n      <StandardTool\r\n        ClassName={\"dragLine\"}\r\n        name={<>&#9866;</>}\r\n        ToolFunctions={dragLine}\r\n      />\r\n      <StandardTool ClassName={\"arc\"} name={<>&#9898;</>} ToolFunctions={Arc} />\r\n      <StandardTool\r\n        ClassName={\"squareFill\"}\r\n        name={<FaSquareFull />}\r\n        ToolFunctions={squareFill}\r\n      />\r\n      <StandardTool\r\n        ClassName={\"square\"}\r\n        name={<BsSquare />}\r\n        ToolFunctions={square}\r\n      />\r\n\r\n      <div\r\n        className=\"text\"\r\n        style={\r\n          ToolbarStatus.tool.Name === \"text\"\r\n            ? global.ActiveBtn\r\n            : { borderColor: \"#000\" }\r\n        }\r\n        onClick={() => {\r\n          setToolbarStatus((prevState) => ({\r\n            ...prevState,\r\n            tool: text,\r\n          }));\r\n        }}\r\n      >\r\n        <VscTextSize style={{ width: \"25px\", height: \"25px\" }} />\r\n        {/* <div\r\n          className=\"ToolSettings\"\r\n          style={{\r\n            display: ToolbarStatus.tool.Name === \"text\" ? \"block\" : \"none\",\r\n          }}\r\n        >\r\n          <select className=\"textTool__fontSelect\">\r\n            <option value=\"font\" key=\"1\">\r\n              font1\r\n            </option>\r\n            <option value=\"font\" key=\"2\">\r\n              font2\r\n            </option>\r\n            <option value=\"font\" key=\"3\">\r\n              font 3\r\n            </option>\r\n          </select>\r\n        </div> */}\r\n      </div>\r\n\r\n      {/* <div>\r\n        <button\r\n          onClick={() => {\r\n            console.log(ToolbarStatus);\r\n          }}\r\n        >\r\n          test\r\n        </button>\r\n      </div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Toolbar;\r\n","import { Pen } from \"./ToolFunctions\";\r\n\r\nexport const DefaultToolbarStatus = {\r\n  color: \"#000000\",\r\n  lineWidth: 5,\r\n  tool: Pen,\r\n};\r\n","import React, { useState } from \"react\";\nimport { DrawField } from \"./components/DrawField\";\nimport { Toolbar } from \"./components/Toolbar\";\nimport { DefaultToolbarStatus } from \"./global/initialToolbarStatus\";\n\nfunction App() {\n  const [ToolbarStatus, setToolbarStatus] = useState(DefaultToolbarStatus);\n\n  const test = () => {\n    \n  };\n\n  return (\n    <div className=\"App\">\n      <Toolbar\n        setToolbarStatus={setToolbarStatus}\n        ToolbarStatus={ToolbarStatus}\n      />\n      <DrawField\n        ToolbarStatus={ToolbarStatus}\n        setToolbarStatus={setToolbarStatus}\n      />\n\n      {/* <button\n        onClick={() => {\n          console.log(ToolbarStatus);\n        }}\n      >\n        test\n      </button> */}\n    </div>\n  );\n}\n\nexport default App;\n\n// https://github.com/satansdeer/drawing-react-canvas\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.scss\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}